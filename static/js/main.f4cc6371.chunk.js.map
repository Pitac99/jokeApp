{"version":3,"sources":["components/Joke.js","App.js","reportWebVitals.js","index.js"],"names":["Joke","_ref","randomJoke","jokeImg","react_default","a","createElement","className","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","jokes","_this2","fetch","then","response","json","info","setState","console","log","_this3","finalJoke","value","components_Joke","onClick","users","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"yNAWeA,SATF,SAAAC,GAA2B,IAAzBC,EAAyBD,EAAzBC,WAAyBD,EAAbE,QACvB,OAAOC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,gBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCAAf,IAAuDL,MCoC5CM,cAjCX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXC,MAAO,IAHCR,mFAOC,IAAAS,EAAAN,KACjBO,MAAM,2CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SACzBF,KAAK,SAAAG,GAAI,OAAIL,EAAKM,SAAS,CAACP,MAAMM,MACnCE,QAAQC,IAAI,oDAIf,IAAAC,EAAAf,KAAQgB,EAAYhB,KAAKI,MAAMC,MAAMY,MAOrC,OAEIzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwB,EAAD,CAAM5B,WAAY0B,IAClBxB,EAAAC,EAAAC,cAAA,UAAQyB,QAVQ,WAClBZ,MAAM,2CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAY,GAAK,OAAIL,EAAKH,SAAS,CAACP,MAAMe,MACpCP,QAAQC,IAAI,UAMoBnB,UAAU,4DAAxC,uBA3BY0B,aCMHC,SAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAlB,KAAAiB,EAAAE,KAAA,UAAqBnB,KAAK,SAAAnB,GAAiD,IAA9CuC,EAA8CvC,EAA9CuC,OAAQC,EAAsCxC,EAAtCwC,OAAQC,EAA8BzC,EAA9ByC,OAAQC,EAAsB1C,EAAtB0C,OAAQC,EAAc3C,EAAd2C,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,OCADU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7C,EAAAC,EAAAC,cAACF,EAAAC,EAAM6C,WAAP,KACE9C,EAAAC,EAAAC,cAAC6C,EAAD,QAOJjB","file":"static/js/main.f4cc6371.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Joke = ({randomJoke, jokeImg}) => {\r\n    return(<div><h2 className=\"ml7 mt7 f1 white\">Chuck Norris</h2>\r\n    <div className=\"tl bg-white br2 ml7 dib pa3 measure\"> {randomJoke}\r\n    </div>\r\n    </div>\r\n  );\r\n    \r\n}\r\n\r\nexport default Joke;","import React, {Component} from 'react';\nimport './App.css';\nimport Joke from './components/Joke';\n\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n          jokes: [],\n        }\n      }\n\ncomponentDidMount(){\n  fetch('https://api.chucknorris.io/jokes/random')\n  .then(response => response.json())\n   .then(info => this.setState({jokes:info}))\n   console.log('prima-incarcare')\n}\n\nrender()\n{ const finalJoke = this.state.jokes.value;\n  const handleClick = () =>{\n    fetch('https://api.chucknorris.io/jokes/random')\n    .then(response => response.json())\n    .then(users => this.setState({jokes:users}))\n    console.log('click')\n  }\nreturn (\n  \n    <div>\n      <Joke randomJoke={finalJoke}/>\n      <button onClick={handleClick} className=\"garamond f4 br2 ph3 pv2 dib mb2 white bg-black b ml7 mt3\">\n       Random Joke\n       </button>\n    </div>\n  );\n}}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}